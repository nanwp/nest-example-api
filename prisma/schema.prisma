// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(cuid())
  username String @unique @db.VarChar(50)
  email    String @unique @db.VarChar(100)
  phone    String? @db.VarChar(15) // Optional phone field
  name     String @db.VarChar(100)
  password String
  role     String @default("user") // Default role is 'user'
  title    String? @db.VarChar(50) // Optional title field
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("users")
}

model JenisCuti {
  id          String @id @default(cuid())
  name        String @db.VarChar(100)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("jenis_cuti")
}

model SubJenisCuti {
  id          String @id @default(cuid())
  jenisCutiId String
  name        String @db.VarChar(100)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("sub_jenis_cuti")
}

model Cuti {
  id          String @id @default(cuid())
  userId      String
  jenisCutiId String
  subJenisCutiId String?
  description String? @db.Text 
  fileUrl     String? @db.VarChar(255) 
  startDate   DateTime
  endDate     DateTime
  requestTo   String? @db.VarChar(100) // Optional field for who the request is sent to
  status      String @default("pending") // Default status is 'pending'
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("cuti")
}